<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-3.1.xsd 
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <task:annotation-driven/> 
	<!-- 1. 数据源 : DriverManagerDataSource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
<!-- 		<property name="url" value="jdbc:mysql://localhost:3306/mjs" /> -->
<!-- 		<property name="username" value="MJS" /> -->
<!-- 		<property name="password" value="MJS123456" /> -->
		
		<property name="url" value="jdbc:mysql://localhost:3306/hotelmessage" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<!--
		2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源

		MyBatis定义数据源,同意加载配置
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:config/mybatis-config.xml" /> 
	</bean>

	<!--
		3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory

		basePackage:指定sql映射文件/接口所在的包（自动扫描）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hotel.mapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!--
		4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源
	-->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 5. 使用声明式事务
		 transaction-manager：引用上面定义的事务管理器
	 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- ================ Shiro start ================ -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="shiroRealm" />
		</bean>
		
		<!-- 項目自定义的Realm -->
	    <bean id="shiroRealm" class="com.hotel.shiro.ShiroRealm" ></bean>
		
		<!-- Shiro Filter -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			
			<property name="loginUrl" value="/account/login" />
			
			<property name="successUrl" value="/home/index" />
			
			<property name="unauthorizedUrl" value="/account/login" />
			
			<property name="filterChainDefinitions">
				<value>
<!-- 				/home/index                 = authc -->
<!-- 				/backend/users 		        = roles[系统管理员] -->
<!-- 				/backend/** 			    = authc -->
<!-- 				/account/list               = roles[系统管理员] -->
<!-- 				/account/list/**            = roles[系统管理员] -->
<!-- 				/role/**                    = roles[系统管理员] -->
<!-- 				/authority/**               = roles[系统管理员] -->
<!-- 				/organization/**            = roles[系统管理员] -->
<!-- 				/wenzhang/posts             = roles[系统管理员] -->
<!-- 				/wenzhang/** 			    = authc -->
<!-- 				/tool/**             		= authc -->
				</value>
			</property>
		</bean>
	<!-- ================ Shiro end ================ -->
	
</beans>
